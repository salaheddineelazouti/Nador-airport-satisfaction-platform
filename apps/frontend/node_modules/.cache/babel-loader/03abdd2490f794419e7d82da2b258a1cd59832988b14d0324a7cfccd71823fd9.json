{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\n\n/**\n * Hook pour gérer l'état du questionnaire\n * @returns {Object} État et fonctions pour gérer le questionnaire\n */\nexport const useSurveyState = () => {\n  _s();\n  // États pour la gestion des étapes\n  const [currentStep, setCurrentStep] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n\n  // États pour les données du questionnaire\n  const [ratings, setRatings] = useState({});\n  const [comments, setComments] = useState({});\n  const [personalInfo, setPersonalInfo] = useState({\n    age: '',\n    nationality: '',\n    travelPurpose: '',\n    frequency: ''\n  });\n\n  // État pour les fonctionnalités additionnelles\n  const [showFlightRadar, setShowFlightRadar] = useState(false);\n\n  // Gestionnaires d'événements\n  const handleRatingChange = (questionId, value) => {\n    setRatings(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n  const handleCommentChange = (categoryId, value) => {\n    setComments(prev => ({\n      ...prev,\n      [categoryId]: value\n    }));\n  };\n  const handleContinueToEvaluation = () => {\n    setCurrentStep(2);\n  };\n  const handleSubmit = () => {\n    // Ici on pourrait envoyer les données à un backend\n    console.log('Submission data:', {\n      personalInfo,\n      ratings,\n      comments\n    });\n    setSubmitted(true);\n    setCurrentStep(3);\n  };\n  const toggleFlightRadar = () => {\n    setShowFlightRadar(prev => !prev);\n  };\n  const resetSurvey = () => {\n    setSubmitted(false);\n    setCurrentStep(0);\n    setRatings({});\n    setComments({});\n    setPersonalInfo({\n      age: '',\n      nationality: '',\n      travelPurpose: '',\n      frequency: ''\n    });\n    setShowFlightRadar(false);\n  };\n  return {\n    // États\n    currentStep,\n    submitted,\n    ratings,\n    comments,\n    personalInfo,\n    showFlightRadar,\n    // Actions\n    setCurrentStep,\n    setPersonalInfo,\n    handleRatingChange,\n    handleCommentChange,\n    handleContinueToEvaluation,\n    handleSubmit,\n    toggleFlightRadar,\n    resetSurvey\n  };\n};\n_s(useSurveyState, \"cdM7kiW0ds0JGjBUsrxQquL4MGg=\");","map":{"version":3,"names":["useState","useSurveyState","_s","currentStep","setCurrentStep","submitted","setSubmitted","ratings","setRatings","comments","setComments","personalInfo","setPersonalInfo","age","nationality","travelPurpose","frequency","showFlightRadar","setShowFlightRadar","handleRatingChange","questionId","value","prev","handleCommentChange","categoryId","handleContinueToEvaluation","handleSubmit","console","log","toggleFlightRadar","resetSurvey"],"sources":["C:/Users/ELAZZOUTISalaheddine/Desktop/Nador-airport-satisfaction-platform/apps/frontend/src/hooks/useSurveyState.js"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * Hook pour gérer l'état du questionnaire\n * @returns {Object} État et fonctions pour gérer le questionnaire\n */\nexport const useSurveyState = () => {\n  // États pour la gestion des étapes\n  const [currentStep, setCurrentStep] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  \n  // États pour les données du questionnaire\n  const [ratings, setRatings] = useState({});\n  const [comments, setComments] = useState({});\n  const [personalInfo, setPersonalInfo] = useState({\n    age: '',\n    nationality: '',\n    travelPurpose: '',\n    frequency: '',\n  });\n  \n  // État pour les fonctionnalités additionnelles\n  const [showFlightRadar, setShowFlightRadar] = useState(false);\n\n  // Gestionnaires d'événements\n  const handleRatingChange = (questionId, value) => {\n    setRatings(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n  \n  const handleCommentChange = (categoryId, value) => {\n    setComments(prev => ({\n      ...prev,\n      [categoryId]: value\n    }));\n  };\n  \n  const handleContinueToEvaluation = () => {\n    setCurrentStep(2);\n  };\n  \n  const handleSubmit = () => {\n    // Ici on pourrait envoyer les données à un backend\n    console.log('Submission data:', {\n      personalInfo,\n      ratings,\n      comments\n    });\n    \n    setSubmitted(true);\n    setCurrentStep(3);\n  };\n  \n  const toggleFlightRadar = () => {\n    setShowFlightRadar(prev => !prev);\n  };\n  \n  const resetSurvey = () => {\n    setSubmitted(false);\n    setCurrentStep(0);\n    setRatings({});\n    setComments({});\n    setPersonalInfo({\n      age: '',\n      nationality: '',\n      travelPurpose: '',\n      frequency: '',\n    });\n    setShowFlightRadar(false);\n  };\n\n  return {\n    // États\n    currentStep,\n    submitted,\n    ratings,\n    comments,\n    personalInfo,\n    showFlightRadar,\n    \n    // Actions\n    setCurrentStep,\n    setPersonalInfo,\n    handleRatingChange,\n    handleCommentChange,\n    handleContinueToEvaluation,\n    handleSubmit,\n    toggleFlightRadar,\n    resetSurvey\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ca,GAAG,EAAE,EAAE;IACPC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAMmB,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;IAChDb,UAAU,CAACc,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACF,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAACC,UAAU,EAAEH,KAAK,KAAK;IACjDX,WAAW,CAACY,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACE,UAAU,GAAGH;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMI,0BAA0B,GAAGA,CAAA,KAAM;IACvCrB,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMsB,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;MAC9BjB,YAAY;MACZJ,OAAO;MACPE;IACF,CAAC,CAAC;IAEFH,YAAY,CAAC,IAAI,CAAC;IAClBF,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMyB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BX,kBAAkB,CAACI,IAAI,IAAI,CAACA,IAAI,CAAC;EACnC,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBxB,YAAY,CAAC,KAAK,CAAC;IACnBF,cAAc,CAAC,CAAC,CAAC;IACjBI,UAAU,CAAC,CAAC,CAAC,CAAC;IACdE,WAAW,CAAC,CAAC,CAAC,CAAC;IACfE,eAAe,CAAC;MACdC,GAAG,EAAE,EAAE;MACPC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,EAAE;MACjBC,SAAS,EAAE;IACb,CAAC,CAAC;IACFE,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,OAAO;IACL;IACAf,WAAW;IACXE,SAAS;IACTE,OAAO;IACPE,QAAQ;IACRE,YAAY;IACZM,eAAe;IAEf;IACAb,cAAc;IACdQ,eAAe;IACfO,kBAAkB;IAClBI,mBAAmB;IACnBE,0BAA0B;IAC1BC,YAAY;IACZG,iBAAiB;IACjBC;EACF,CAAC;AACH,CAAC;AAAC5B,EAAA,CAtFWD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}