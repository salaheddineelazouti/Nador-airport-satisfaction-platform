{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from 'react';\nimport { languages, getCategoryTitles, getQuestionsByLanguage } from '../components/languageData';\n\n/**\n * Hook pour gérer la langue et les textes associés\n * @returns {Object} Données et fonctions liées à la langue\n */\nexport const useLanguage = () => {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n\n  // Textes selon la langue sélectionnée\n  const texts = useMemo(() => languages[selectedLanguage] || languages.fr, [selectedLanguage]);\n\n  // Catégories selon la langue sélectionnée\n  const categories = useMemo(() => getCategoryTitles(selectedLanguage), [selectedLanguage]);\n\n  // Questions par catégorie selon la langue sélectionnée\n  const categoryQuestions = useMemo(() => {\n    if (!categories) return {};\n    const result = {};\n    Object.keys(categories).forEach(categoryId => {\n      result[categoryId] = getQuestionsByLanguage(categoryId, selectedLanguage);\n    });\n    return result;\n  }, [selectedLanguage, categories]);\n\n  // Mise à jour de la direction du texte selon la langue\n  const handleLanguageSelect = language => {\n    setSelectedLanguage(language);\n    document.documentElement.lang = language;\n    document.body.dir = language === 'ar' ? 'rtl' : 'ltr';\n  };\n\n  // Effet pour gérer le sens de lecture selon la langue\n  useEffect(() => {\n    if (selectedLanguage) {\n      document.documentElement.lang = selectedLanguage;\n      document.body.dir = selectedLanguage === 'ar' ? 'rtl' : 'ltr';\n    }\n  }, [selectedLanguage]);\n\n  // Réinitialiser la langue\n  const resetLanguage = () => {\n    document.body.dir = 'ltr';\n    document.documentElement.lang = 'fr';\n    setSelectedLanguage('');\n  };\n  return {\n    selectedLanguage,\n    texts,\n    categories,\n    categoryQuestions,\n    handleLanguageSelect,\n    resetLanguage,\n    isRTL: selectedLanguage === 'ar'\n  };\n};\n_s(useLanguage, \"+SilmrlKGfqba7PwONJbI4Cxo7k=\");","map":{"version":3,"names":["useState","useEffect","useMemo","languages","getCategoryTitles","getQuestionsByLanguage","useLanguage","_s","selectedLanguage","setSelectedLanguage","texts","fr","categories","categoryQuestions","result","Object","keys","forEach","categoryId","handleLanguageSelect","language","document","documentElement","lang","body","dir","resetLanguage","isRTL"],"sources":["C:/Users/ELAZZOUTISalaheddine/Desktop/Nador-airport-satisfaction-platform/apps/frontend/src/hooks/useLanguage.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport { languages, getCategoryTitles, getQuestionsByLanguage } from '../components/languageData';\n\n/**\n * Hook pour gérer la langue et les textes associés\n * @returns {Object} Données et fonctions liées à la langue\n */\nexport const useLanguage = () => {\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n\n  // Textes selon la langue sélectionnée\n  const texts = useMemo(() => \n    languages[selectedLanguage] || languages.fr, \n    [selectedLanguage]\n  );\n\n  // Catégories selon la langue sélectionnée\n  const categories = useMemo(() => \n    getCategoryTitles(selectedLanguage), \n    [selectedLanguage]\n  );\n\n  // Questions par catégorie selon la langue sélectionnée\n  const categoryQuestions = useMemo(() => {\n    if (!categories) return {};\n    \n    const result = {};\n    Object.keys(categories).forEach(categoryId => {\n      result[categoryId] = getQuestionsByLanguage(categoryId, selectedLanguage);\n    });\n    return result;\n  }, [selectedLanguage, categories]);\n\n  // Mise à jour de la direction du texte selon la langue\n  const handleLanguageSelect = (language) => {\n    setSelectedLanguage(language);\n    document.documentElement.lang = language;\n    document.body.dir = language === 'ar' ? 'rtl' : 'ltr';\n  };\n\n  // Effet pour gérer le sens de lecture selon la langue\n  useEffect(() => {\n    if (selectedLanguage) {\n      document.documentElement.lang = selectedLanguage;\n      document.body.dir = selectedLanguage === 'ar' ? 'rtl' : 'ltr';\n    }\n  }, [selectedLanguage]);\n\n  // Réinitialiser la langue\n  const resetLanguage = () => {\n    document.body.dir = 'ltr';\n    document.documentElement.lang = 'fr';\n    setSelectedLanguage('');\n  };\n\n  return {\n    selectedLanguage,\n    texts,\n    categories,\n    categoryQuestions,\n    handleLanguageSelect,\n    resetLanguage,\n    isRTL: selectedLanguage === 'ar'\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACpD,SAASC,SAAS,EAAEC,iBAAiB,EAAEC,sBAAsB,QAAQ,4BAA4B;;AAEjG;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACA,MAAMU,KAAK,GAAGR,OAAO,CAAC,MACpBC,SAAS,CAACK,gBAAgB,CAAC,IAAIL,SAAS,CAACQ,EAAE,EAC3C,CAACH,gBAAgB,CACnB,CAAC;;EAED;EACA,MAAMI,UAAU,GAAGV,OAAO,CAAC,MACzBE,iBAAiB,CAACI,gBAAgB,CAAC,EACnC,CAACA,gBAAgB,CACnB,CAAC;;EAED;EACA,MAAMK,iBAAiB,GAAGX,OAAO,CAAC,MAAM;IACtC,IAAI,CAACU,UAAU,EAAE,OAAO,CAAC,CAAC;IAE1B,MAAME,MAAM,GAAG,CAAC,CAAC;IACjBC,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC,CAACK,OAAO,CAACC,UAAU,IAAI;MAC5CJ,MAAM,CAACI,UAAU,CAAC,GAAGb,sBAAsB,CAACa,UAAU,EAAEV,gBAAgB,CAAC;IAC3E,CAAC,CAAC;IACF,OAAOM,MAAM;EACf,CAAC,EAAE,CAACN,gBAAgB,EAAEI,UAAU,CAAC,CAAC;;EAElC;EACA,MAAMO,oBAAoB,GAAIC,QAAQ,IAAK;IACzCX,mBAAmB,CAACW,QAAQ,CAAC;IAC7BC,QAAQ,CAACC,eAAe,CAACC,IAAI,GAAGH,QAAQ;IACxCC,QAAQ,CAACG,IAAI,CAACC,GAAG,GAAGL,QAAQ,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK;EACvD,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACd,IAAIO,gBAAgB,EAAE;MACpBa,QAAQ,CAACC,eAAe,CAACC,IAAI,GAAGf,gBAAgB;MAChDa,QAAQ,CAACG,IAAI,CAACC,GAAG,GAAGjB,gBAAgB,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK;IAC/D;EACF,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;;EAEtB;EACA,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IAC1BL,QAAQ,CAACG,IAAI,CAACC,GAAG,GAAG,KAAK;IACzBJ,QAAQ,CAACC,eAAe,CAACC,IAAI,GAAG,IAAI;IACpCd,mBAAmB,CAAC,EAAE,CAAC;EACzB,CAAC;EAED,OAAO;IACLD,gBAAgB;IAChBE,KAAK;IACLE,UAAU;IACVC,iBAAiB;IACjBM,oBAAoB;IACpBO,aAAa;IACbC,KAAK,EAAEnB,gBAAgB,KAAK;EAC9B,CAAC;AACH,CAAC;AAACD,EAAA,CAzDWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}