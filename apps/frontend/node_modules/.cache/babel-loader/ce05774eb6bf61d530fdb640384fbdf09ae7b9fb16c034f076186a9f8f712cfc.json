{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\n\n/**\n * Hook pour calculer le progrès du questionnaire\n * @param {number} currentStep - Étape actuelle du questionnaire\n * @param {boolean} submitted - Si le questionnaire a été soumis\n * @param {Object} ratings - Évaluations données par l'utilisateur\n * @param {Object} categoryQuestions - Questions par catégorie\n * @returns {number} Pourcentage de progression\n */\nexport const useProgressCalculation = (currentStep, submitted, ratings, categoryQuestions) => {\n  _s();\n  const progress = useMemo(() => {\n    if (currentStep === 0) return 0;\n    if (currentStep === 1) return 20;\n    if (submitted) return 100;\n    const totalQuestions = Object.values(categoryQuestions || {}).flat().length;\n    const answeredQuestions = Object.keys(ratings || {}).length;\n    return Math.min(95, 20 + Math.round(answeredQuestions / Math.max(totalQuestions, 1) * 75));\n  }, [currentStep, submitted, ratings, categoryQuestions]);\n  return progress;\n};\n_s(useProgressCalculation, \"w1+v397wmAOHhnkFt7AtWesxRR4=\");","map":{"version":3,"names":["useMemo","useProgressCalculation","currentStep","submitted","ratings","categoryQuestions","_s","progress","totalQuestions","Object","values","flat","length","answeredQuestions","keys","Math","min","round","max"],"sources":["C:/Users/ELAZZOUTISalaheddine/Desktop/Nador-airport-satisfaction-platform/apps/frontend/src/hooks/useProgressCalculation.js"],"sourcesContent":["import { useMemo } from 'react';\n\n/**\n * Hook pour calculer le progrès du questionnaire\n * @param {number} currentStep - Étape actuelle du questionnaire\n * @param {boolean} submitted - Si le questionnaire a été soumis\n * @param {Object} ratings - Évaluations données par l'utilisateur\n * @param {Object} categoryQuestions - Questions par catégorie\n * @returns {number} Pourcentage de progression\n */\nexport const useProgressCalculation = (currentStep, submitted, ratings, categoryQuestions) => {\n  const progress = useMemo(() => {\n    if (currentStep === 0) return 0;\n    if (currentStep === 1) return 20;\n    if (submitted) return 100;\n    \n    const totalQuestions = Object.values(categoryQuestions || {})\n      .flat()\n      .length;\n    const answeredQuestions = Object.keys(ratings || {}).length;\n    \n    return Math.min(\n      95,\n      20 + Math.round((answeredQuestions / Math.max(totalQuestions, 1)) * 75)\n    );\n  }, [currentStep, submitted, ratings, categoryQuestions]);\n  \n  return progress;\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,sBAAsB,GAAGA,CAACC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,iBAAiB,KAAK;EAAAC,EAAA;EAC5F,MAAMC,QAAQ,GAAGP,OAAO,CAAC,MAAM;IAC7B,IAAIE,WAAW,KAAK,CAAC,EAAE,OAAO,CAAC;IAC/B,IAAIA,WAAW,KAAK,CAAC,EAAE,OAAO,EAAE;IAChC,IAAIC,SAAS,EAAE,OAAO,GAAG;IAEzB,MAAMK,cAAc,GAAGC,MAAM,CAACC,MAAM,CAACL,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAC1DM,IAAI,CAAC,CAAC,CACNC,MAAM;IACT,MAAMC,iBAAiB,GAAGJ,MAAM,CAACK,IAAI,CAACV,OAAO,IAAI,CAAC,CAAC,CAAC,CAACQ,MAAM;IAE3D,OAAOG,IAAI,CAACC,GAAG,CACb,EAAE,EACF,EAAE,GAAGD,IAAI,CAACE,KAAK,CAAEJ,iBAAiB,GAAGE,IAAI,CAACG,GAAG,CAACV,cAAc,EAAE,CAAC,CAAC,GAAI,EAAE,CACxE,CAAC;EACH,CAAC,EAAE,CAACN,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,iBAAiB,CAAC,CAAC;EAExD,OAAOE,QAAQ;AACjB,CAAC;AAACD,EAAA,CAlBWL,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}